/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "calc.h"


void
calculadora_1(char *host, double n1, double n2, char operator)
{
	CLIENT *clnt;
	calc_res  *result_1;
	double suma_1_n1;
	double suma_1_n2;
	calc_res  *result_2;
	double producto_1_n1;
	double producto_1_n2;
	calc_res  *result_3;
	double resta_1_n1;
	double resta_1_n2;
	calc_res  *result_4;
	double division_1_n1;
	double division_1_n2;
	calc_res  *result_5;
	double raiz_1_n;
	calc_res  *result_6;
	double potencia_1_n1;
	double potencia_1_n2;

#ifndef	DEBUG
	clnt = clnt_create (host, CALCULADORA, BASIC_CALC2, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */

	switch (operator)
	{
	case '+':
		result_1 = suma_1(n1, n2, clnt);
		if (result_1 == (calc_res *)NULL){
			clnt_perror(clnt, "call failed");
		}
		break;
	case '-':
		result_1 = resta_1(n1, n2, clnt);
		if (result_1 == (calc_res *) NULL) {
			clnt_perror (clnt, "call failed");
		}
		break;
	case '*':
		result_1 = producto_1(n1, n2, clnt);
		if (result_1 == (calc_res *) NULL) {
			clnt_perror (clnt, "call failed");
		}
		break;
	case '/':
		result_1 = division_1(n1, n2, clnt);
		if (result_1 == (calc_res *) NULL) {
			clnt_perror (clnt, "call failed");
		}
		break;
	case '^':
		result_1 = potencia_1(n1, n2, clnt);
		if (result_1 == (calc_res *) NULL) {
			clnt_perror (clnt, "call failed");
		}
		break;
	case 'r':
		result_1 = raiz_1(n1, n2, clnt);
		if (result_1 == (calc_res *) NULL) {
			clnt_perror (clnt, "call failed");
		}
		break;
	}
	
	printf("Resultado recibido = %f\n", result_1->calc_res_u.result);
#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


int
main (int argc, char *argv[])
{
	char *host;
	double n1, n2;
	char operator;
	char input[30];

	if (argc < 2) {
		printf ("usage: %s server_host\n", argv[0]);
		exit (1);
	}
	host = argv[1];

	int correct_input = 1, cont_reading = 0;

	while (cont_reading==0)
	{
		cont_reading = 0;
		printf("¿Qué operación desea realizar? (Formato: num operador num)\n");
		printf("\t+ para sumar\n");
		printf("\t- para restar\n");
		printf("\t* para multiplicar\n");
		printf("\t/ para dividir\n");
		printf("\tr para raiz\n");
		printf("\t^ para potencia\n");
		printf("Pulse s para salir.\n");
		fgets(input, 30, stdin);


		// Compruebo si quiere teminar:
		if(strlen(input) == 2 && strcmp(input, "s\n")==0 ){
			cont_reading = 1;
		} else 
			
			//Compruebo la operacion introducida.
			if (3 != sscanf(input, "%lf %c %lf", &n1, &operator, & n2)) {
					printf("Formato invalido. \n");
			}	
			else if (operator!= '+' && operator!= '-' && operator!= '*' && operator!= '/' && operator!= '^' && operator!= 'r')
			{
				printf("Operador %c invalido. \n", operator);
			} else if (operator == 'r' && n1 == 0)
				printf("El indice debe ser distinto de 0. \n");
			else
					calculadora_1 (host, n1, n2, operator);

		printf("---------------------------------------------------------------------------\n");
	}

	// calculadora_1 (host);
exit (0);
}
